{
  "name": "coc-symbol-line",
  "version": "0.0.17",
  "description": "",
  "author": "wongxy <xiyao.wong@foxmail.com>",
  "license": "MIT",
  "main": "lib/index.js",
  "keywords": [
    "coc.nvim"
  ],
  "engines": {
    "coc": "^0.0.80"
  },
  "scripts": {
    "lint": "eslint src --ext ts",
    "clean": "rimraf lib",
    "watch": "node esbuild.js --watch",
    "build": "node esbuild.js",
    "prepare": "node esbuild.js"
  },
  "prettier": {
    "singleQuote": true,
    "printWidth": 120,
    "semi": true
  },
  "devDependencies": {
    "@types/node": "^17.0.19",
    "@typescript-eslint/eslint-plugin": "^4.8.2",
    "@typescript-eslint/parser": "^4.8.2",
    "coc.nvim": "^0.0.80",
    "esbuild": "^0.8.42",
    "eslint": "^7.14.0",
    "eslint-config-prettier": "^8.1.0",
    "eslint-plugin-prettier": "^3.1.4",
    "prettier": "^2.2.0",
    "rimraf": "^3.0.2",
    "typescript": "^4.1.2",
    "vscode-languageserver-protocol": "^3.16.0"
  },
  "activationEvents": [
    "*"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "coc-symbol-line configuration",
      "properties": {
        "symbol-line.default": {
          "type": "string",
          "default": "%f",
          "description": "Default line when symbol-line is empty. Use `%f` by default. You can use `%#CocSymbolLine#` for unified highlighting"
        },
        "symbol-line.separator": {
          "type": "string",
          "default": " > ",
          "description": "Separator between items"
        },
        "symbol-line.icons": {
          "type": "boolean",
          "default": true,
          "description": "Render Symbol-Line Elements with Icons."
        },
        "symbol-line.onlyNearestKinds": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "description": "Shows only the nearest one. Available items: 'File','Module','Namespace','Package','Class','Method','Property','Field','Constructor','Enum','Interface','Function','Variable','Constant','String','Number','Boolean','Array','Object','Key','Null','EnumMember','Struct','Event','Operator','TypeParameter'"
        },
        "symbol-line.maxItems": {
          "type": "number",
          "default": 8,
          "description": "Maximum items of symbols."
        },
        "symbol-line.maxItemsIndicator": {
          "type": "string",
          "default": "â€¦",
          "description": "A symbol for ellipsis."
        },
        "symbol-line.showFiles": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `file`-symbols."
        },
        "symbol-line.showModules": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `module`-symbols."
        },
        "symbol-line.showNamespaces": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `namespace`-symbols."
        },
        "symbol-line.showPackages": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `package`-symbols."
        },
        "symbol-line.showClasses": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `class`-symbols."
        },
        "symbol-line.showMethods": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `method`-symbols."
        },
        "symbol-line.showProperties": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `property`-symbols."
        },
        "symbol-line.showFields": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `field`-symbols."
        },
        "symbol-line.showConstructors": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `constructor`-symbols."
        },
        "symbol-line.showEnums": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `enum`-symbols."
        },
        "symbol-line.showInterfaces": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `interface`-symbols."
        },
        "symbol-line.showFunctions": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `function`-symbols."
        },
        "symbol-line.showVariables": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `variable`-symbols."
        },
        "symbol-line.showConstants": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `constant`-symbols."
        },
        "symbol-line.showStrings": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `string`-symbols."
        },
        "symbol-line.showNumbers": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `number`-symbols."
        },
        "symbol-line.showBooleans": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `boolean`-symbols."
        },
        "symbol-line.showArrays": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `array`-symbols."
        },
        "symbol-line.showObjects": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `object`-symbols."
        },
        "symbol-line.showKeys": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `key`-symbols."
        },
        "symbol-line.showNull": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `null`-symbols."
        },
        "symbol-line.showEnumMembers": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `enumMember`-symbols."
        },
        "symbol-line.showStructs": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `struct`-symbols."
        },
        "symbol-line.showEvents": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `event`-symbols."
        },
        "symbol-line.showOperators": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `operator`-symbols."
        },
        "symbol-line.showTypeParameters": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When enabled symbol-line shows `typeParameter`-symbols."
        }
      }
    },
    "commands": []
  }
}
